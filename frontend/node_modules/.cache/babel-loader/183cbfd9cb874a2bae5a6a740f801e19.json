{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\"; // Date Fns is used to format the dates we receive\n// from our API call\n\nimport { format } from \"date-fns\"; // define a generatePDF function that accepts a tickets argument\n// export default function Tickets(props){\n\nconst generatePDF = tickets => {\n  // initialize jsPDF\n  const doc = new jsPDF(); // define the columns we want and their titles\n\n  const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"]; // define an empty array of rows\n\n  const tableRows = []; // for each ticket pass all its data into an array\n\n  tickets.forEach(ticket => {\n    const ticketData = [ticket.id, ticket.title, ticket.request, ticket.status, // called date-fns to format the date on the ticket\n    format(new Date(ticket.updated_at), \"yyyy-MM-dd\")]; // push each tickcet's info into a row\n\n    tableRows.push(ticketData);\n  }); // startY is basically margin-top\n\n  doc.autoTable(tableColumn, tableRows, {\n    startY: 20\n  });\n  const date = Date().split(\" \"); // we use a date string to generate our filename.\n\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4]; // ticket title. and margin-top + margin-left\n\n  doc.text(\"Closed tickets within the last one month.\", 14, 15); // we define the name of our PDF file.\n\n  doc.save(`report_${dateStr}.pdf`);\n};\n\nexport default generatePDF;","map":{"version":3,"sources":["C:/Users/THARINDU/ITPM/LibraryManagementSystem/Library/frontend/src/components/services/reportGenerator.js"],"names":["jsPDF","format","generatePDF","tickets","doc","tableColumn","tableRows","forEach","ticket","ticketData","id","title","request","status","Date","updated_at","push","autoTable","startY","date","split","dateStr","text","save"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP,C,CACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGC,OAAO,IAAI;AAC7B;AACA,QAAMC,GAAG,GAAG,IAAIJ,KAAJ,EAAZ,CAF6B,CAI7B;;AACA,QAAMK,WAAW,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,WAAnC,CAApB,CAL6B,CAM7B;;AACA,QAAMC,SAAS,GAAG,EAAlB,CAP6B,CAS7B;;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgBC,MAAM,IAAI;AACxB,UAAMC,UAAU,GAAG,CACjBD,MAAM,CAACE,EADU,EAEjBF,MAAM,CAACG,KAFU,EAGjBH,MAAM,CAACI,OAHU,EAIjBJ,MAAM,CAACK,MAJU,EAKjB;AACAZ,IAAAA,MAAM,CAAC,IAAIa,IAAJ,CAASN,MAAM,CAACO,UAAhB,CAAD,EAA8B,YAA9B,CANW,CAAnB,CADwB,CASxB;;AACAT,IAAAA,SAAS,CAACU,IAAV,CAAeP,UAAf;AACD,GAXD,EAV6B,CAwB7B;;AACAL,EAAAA,GAAG,CAACa,SAAJ,CAAcZ,WAAd,EAA2BC,SAA3B,EAAsC;AAAEY,IAAAA,MAAM,EAAE;AAAV,GAAtC;AACA,QAAMC,IAAI,GAAGL,IAAI,GAAGM,KAAP,CAAa,GAAb,CAAb,CA1B6B,CA2B7B;;AACA,QAAMC,OAAO,GAAGF,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8BA,IAAI,CAAC,CAAD,CAAlC,GAAwCA,IAAI,CAAC,CAAD,CAA5D,CA5B6B,CA6B7B;;AACAf,EAAAA,GAAG,CAACkB,IAAJ,CAAS,2CAAT,EAAsD,EAAtD,EAA0D,EAA1D,EA9B6B,CA+B7B;;AACAlB,EAAAA,GAAG,CAACmB,IAAJ,CAAU,UAASF,OAAQ,MAA3B;AACD,CAjCD;;AAmCA,eAAenB,WAAf","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n// from our API call\r\nimport { format } from \"date-fns\";\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\n// export default function Tickets(props){\r\nconst generatePDF = tickets => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  tickets.forEach(ticket => {\r\n    const ticketData = [\r\n      ticket.id,\r\n      ticket.title,\r\n      ticket.request,\r\n      ticket.status,\r\n      // called date-fns to format the date on the ticket\r\n      format(new Date(ticket.updated_at), \"yyyy-MM-dd\")\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n  });\r\n\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Closed tickets within the last one month.\", 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default generatePDF;"]},"metadata":{},"sourceType":"module"}